[package]
name = "serf"
version.workspace = true
rust-version.workspace = true
edition.workspace = true
license.workspace = true
description.workspace = true
repository.workspace = true
readme.workspace = true
homepage.workspace = true
keywords.workspace = true
categories.workspace = true

[package.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "docsrs"]

[features]
default = ["tokio", "compression", "encryption", "dns", "tcp", "quic"]

agent = []

cli = ["dep:clap", "agnostic/process", "async-channel", "circularbuf", "config", "futures", "metrics", "serde_json", "serde", "serde_with", "tracing", "regex", "humantime", "humantime-serde", "scopeguard", "tokio?/rt-multi-thread", "tokio?/rt", "tracing-subscriber"]

tokio = ["dep:tokio", "memberlist/tokio", "agnostic?/tokio"]
async-std = ["dep:async-std", "memberlist/async-std", "agnostic?/async-std"]
smol = ["dep:smol", "memberlist/smol", "agnostic?/smol"]

serde = [
  "dep:serde",
  "memberlist/serde",
  "serf-core/serde",
  "humantime-serde",
]

metrics = [
  "memberlist/metrics",
  "serf-core/metrics",
]

compression = []

encryption = ["memberlist/encryption", "serf-core/encryption"]

quic = ["memberlist/quic"]
quinn = ["memberlist/quinn", "quic"]

net = ["memberlist/net"]
tcp = ["memberlist/tcp", "net"]
tls = ["memberlist/tls", "net"]

# enable DNS node address resolver
dns = ["memberlist/dns"]
dns-over-quic = [
  "memberlist/dns-over-quic",
]
dns-over-h3 = ["memberlist/dns-over-h3"]
dns-over-https-rustls = [
  "memberlist/dns-over-https-rustls",
]
dns-over-rustls = [
  "memberlist/dns-over-rustls",
]
dns-over-openssl = [
  "memberlist/dns-over-openssl",
]
dns-over-native-tls = [
  "memberlist/dns-over-native-tls",
]
dns-webpki-roots = [
  "memberlist/dns-webpki-roots",
]
dns-native-certs = [
  "memberlist/dns-native-certs",
]
dnssec-openssl = [
  "memberlist/dnssec-openssl",
]
dnssec-ring = ["memberlist/dnssec-ring"]
dnssec = ["memberlist/dnssec"]

test = ["memberlist/test", "serf-core/test"]

[dependencies]
memberlist.workspace = true
serf-core = { workspace = true, default-features = false }
smol_str.workspace = true
viewit.workspace = true

tokio = { version = "1", optional = true }
async-std = { version = "1", optional = true }
smol = { version = "2", optional = true }

agnostic = { version = "0.7", optional = true }
async-channel = { version = "2", optional = true }
clap = { version = "4.5", optional = true, features = ["derive", "env"] }
circularbuf = { version = "0.1", optional = true, features = ["future"] }
config = { version = "0.15", optional = true }
derive_more = { workspace = true, optional = true, features = ["display"] }
futures = { version = "0.3", optional = true }
humantime = { version = "2", optional = true }
humantime-serde = { workspace = true, optional = true }
regex = { workspace = true, optional = true }
serde = { version = "1", optional = true, features = ["derive"] }
serde_json = { version = "1", optional = true }
serde_with = { version = "3", optional = true }
scopeguard = { version = "1", optional = true }
tracing = { version = "0.1", optional = true }
tracing-subscriber = { version = "0.3", optional = true, features = [
  "env-filter",
  "tracing-log",
] }

[dev-dependencies]
tokio = { version = "1", features = ["full"] }
smol_str = "0.3"
paste = "1"

[[test]]
name = "main"
path = "test/main.rs"
required-features = ["test"]
